
package org.usfirst.frc.team610.robot;

import com.kauailabs.nav6.frc.IMUAdvanced;

import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.IterativeRobot;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.SerialPort;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 * The VM is configured to automatically run this class, and to call the
 * functions corresponding to each mode, as described in the IterativeRobot
 * documentation. If you change the name of this class or the package after
 * creating this project, you must also update the manifest file in the resource
 * directory.
 */

public class Robot extends IterativeRobot {

    SerialPort serial_port;
    //IMU imu;  // Alternatively, use IMUAdvanced for advanced features
    IMUAdvanced imu;
    Talon leftFront;
    Talon leftBack;
    Talon rightFront;
    Talon rightBack;
    Joystick driver;
    Encoder leftEncoder;
    Encoder rightEncoder;
    
    public Robot() {
    	
    	try {
    	serial_port = new SerialPort(57600,SerialPort.Port.kMXP);
		
		// You can add a second parameter to modify the 
		// update rate (in hz) from 4 to 100.  The default is 100.
		// If you need to minimize CPU load, you can set it to a
		// lower value, as shown here, depending upon your needs.
		
		// You can also use the IMUAdvanced class for advanced
		// features.
		
		byte update_rate_hz = 50;
		//imu = new IMU(serial_port,update_rate_hz);
		imu = new IMUAdvanced(serial_port,update_rate_hz);
    	} catch( Exception ex ) {
    		
    	}
        if ( imu != null ) {
            LiveWindow.addSensor("IMU", "Gyro", imu);
        }
    }
    
    double angle;
    final double p = 0.05;
    
    
    /**
     * This function is run when the robot is first started up and should be
     * used for any initialization code.
     */
    public void robotInit() {
    	angle = imu.getYaw();
    	leftFront = new Talon(0);
    	leftBack = new Talon(1);
    	rightFront = new Talon(2);
    	rightBack = new Talon(3);
    	driver = new Joystick(0);
    	leftEncoder = new Encoder(0,1);
    	rightEncoder = new Encoder(2,3);
    	imu.zeroYaw();
    	
    }

    /**
     * This function is called periodically during autonomous
     */
    
    
    public void autonomousPeriodic() {
    	
    	

    }

    /**
     * This function is called periodically during operator control
     */
    public void teleopPeriodic() {
    	SmartDashboard.putNumber("Gyro: ", imu.getYaw());
    	System.out.println(imu.getYaw());
        
    }
    
    /**
     * This function is called periodically during test mode
     */
    public void testPeriodic() {
    
    }
    
}
